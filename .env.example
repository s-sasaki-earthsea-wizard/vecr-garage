# Project Configuration
PROJECT_NAME=vecr-garage

# Container and Network Configuration
CONTAINER_NAME=${PROJECT_NAME}
NETWORK_NAME=${PROJECT_NAME}-network

# Database Configuration
MEMBER_DB_NAME=member_db
MEMBER_DB_USER=testuser
MEMBER_DB_PASSWORD=password

# Volume Configuration
VOLUME_NAME=vecr-data

# Minio storage Configuration
MINIO_ROOT_USER=minioadmin
MINIO_ROOT_PASSWORD=minioadmin
MINIO_BUCKET_NAME=vecr-garage-storage

# Chat log database Configuration
# DynamoDB configuration is handled internally in docker-compose.yml
# No additional environment variables needed for local development

# Authentication Configuration (for member-manager service)
# モックアップ認証用 - 本番環境では適切な認証システムに置き換える
ADMIN_USERNAME=Admin
ADMIN_PASSWORD=SamplePassword

# Session Configuration
# Flask-Sessionの秘密鍵（本番環境では強力なランダム文字列を使用）
SECRET_KEY=vecr-garage-secret-key-development-only-2025

# 将来の本番環境用設定（現在は未使用）
# AWS Cognito設定
# AWS_REGION=us-west-2
# COGNITO_USER_POOL_ID=us-west-2_xxxxxxxxx
# COGNITO_CLIENT_ID=xxxxxxxxxxxxxxxxxxxxxxxxxx

# Redis設定（セッションストア用）
# REDIS_HOST=localhost
# REDIS_PORT=6379
# REDIS_PASSWORD=

# 本番環境用データベース設定
# DB_HOST=your-rds-endpoint.amazonaws.com
# DB_PORT=5432
# DB_NAME=vecr_prod
# DB_USER=vecr_user
# DB_PASSWORD=your-strong-password-here

# API サービス設定
API_HOST=0.0.0.0
API_PORT=3000
API_BASE_URL=http://localhost:3000

# LLM サービス設定
LLM_HOST=0.0.0.0
LLM_PORT=3001
LLM_BASE_URL=http://localhost:3001

# Member Manager サービス設定
MEMBER_MANAGER_HOST=0.0.0.0
MEMBER_MANAGER_PORT=8000
MEMBER_MANAGER_BASE_URL=http://localhost:8000

# Storage サービス設定
STORAGE_HOST=storage
STORAGE_PORT=9000
STORAGE_CONSOLE_PORT=9001
STORAGE_BASE_URL=http://localhost:9000
STORAGE_CONSOLE_BASE_URL=http://localhost:9001

# データベース設定
MEMBER_DB_HOST=db-member
MEMBER_DB_PORT=5432
DYNAMODB_HOST=db-chat-log
DYNAMODB_PORT=4566

# Webhook 設定
WEBHOOK_ENABLED=true
WEBHOOK_BASE_URL=http://backend-db-registration:3000
WEBHOOK_FULL_URL=http://backend-db-registration:3000/webhook/file-change

# MinIO Webhook 設定
MINIO_WEBHOOK_ENABLE=true
MINIO_WEBHOOK_ENDPOINT=http://backend-db-registration:3000/webhook/file-change

# Webhook動作制御設定
# ETag重複チェック機能の有効/無効制御
# 本番環境: true (重複処理を防ぐ)
# 開発環境: false (DBリセット後の再処理を可能にする)
WEBHOOK_ETAG_CHECK_ENABLED=false

# Webhook自動設定
# docker-compose起動時のWebhook自動設定を制御
WEBHOOK_AUTO_SETUP_ENABLED=true

# その他の設定
USE_S3=false
DEBUG=0

# Discord Webhooks設定
# .envrc から自動的に読み込まれます（source .envrc を実行）
# または手動で設定: DISCORD_WEBHOOKS='{"webhook_name":"url"}'
# 詳細は .envrc.example を参照
DISCORD_WEBHOOKS=